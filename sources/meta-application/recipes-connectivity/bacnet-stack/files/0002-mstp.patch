diff -Naur bacnet-stack-0-8-0/demo/mstpcap/main.c bacnet-stack-0-8-0-ltrx/demo/mstpcap/main.c
--- bacnet-stack-0-8-0/demo/mstpcap/main.c	2019-01-18 14:19:22.125257729 -0800
+++ bacnet-stack-0-8-0-ltrx/demo/mstpcap/main.c	2019-01-18 14:21:25.907866956 -0800
@@ -575,11 +575,15 @@
     struct tm *today;
 
     if (filename) {
+#ifdef LTRX
+        sprintf(filename, "mstp.cap");
+#else
         my_time = time(NULL);
         today = localtime(&my_time);
         sprintf(filename, "mstp_%04d%02d%02d%02d%02d%02d.cap",
             1900 + today->tm_year, 1 + today->tm_mon, today->tm_mday,
             today->tm_hour, today->tm_min, today->tm_sec);
+#endif
     }
 }
 
diff -Naur bacnet-stack-0-8-0/Makefile bacnet-stack-0-8-0-ltrx/Makefile
--- bacnet-stack-0-8-0/Makefile	2019-01-18 14:19:22.081256802 -0800
+++ bacnet-stack-0-8-0-ltrx/Makefile	2019-01-18 14:21:25.895866703 -0800
@@ -20,7 +20,7 @@
 
 #BACDL_DEFINE=-DBACDL_ETHERNET=1
 #BACDL_DEFINE=-DBACDL_ARCNET=1
-#BACDL_DEFINE=-DBACDL_MSTP=1
+BACDL_DEFINE=-DBACDL_MSTP=1
 BACDL_DEFINE?=-DBACDL_BIP=1
 
 # Declare your level of BBMD support
@@ -32,7 +32,7 @@
 MAKE_DEFINE ?=
 
 # Define WEAK_FUNC for [...somebody help here; I can't find any uses of it]
-DEFINES = $(BACNET_DEFINES) $(BACDL_DEFINE) $(BBMD_DEFINE) -DWEAK_FUNC=
+DEFINES = $(BACNET_DEFINES) -DLTRX $(BACDL_DEFINE) $(BBMD_DEFINE) -DWEAK_FUNC=
 DEFINES += $(MAKE_DEFINE)
 
 # BACnet Ports Directory
diff -Naur bacnet-stack-0-8-0/ports/linux/rs485.c bacnet-stack-0-8-0-ltrx/ports/linux/rs485.c
--- bacnet-stack-0-8-0/ports/linux/rs485.c	2019-01-18 14:19:22.157258404 -0800
+++ bacnet-stack-0-8-0-ltrx/ports/linux/rs485.c	2019-01-18 14:21:26.031869570 -0800
@@ -547,10 +547,17 @@
     close(RS485_Handle);
 }
 
+#include <sched.h>
 
 void RS485_Initialize(
     void)
 {
+    struct sched_param p_pri;
+    p_pri.sched_priority = 99;
+    if (sched_setscheduler( 0, SCHED_RR, &p_pri) != 0) {
+        printf("setting priority failed\n");
+    }
+    printf("set process scheduler priority\n");
     struct termios newtio;
     struct serial_struct newserial;
     float baud_error = 0.0;
diff -Naur bacnet-stack-0-8-0/src/mstp.c bacnet-stack-0-8-0-ltrx/src/mstp.c
--- bacnet-stack-0-8-0/src/mstp.c	2019-01-18 14:19:22.137257982 -0800
+++ bacnet-stack-0-8-0-ltrx/src/mstp.c	2019-01-18 14:21:25.935867547 -0800
@@ -162,7 +162,7 @@
 /* a Poll For Master frame: 20 milliseconds. (Implementations may use */
 /* larger values for this timeout, not to exceed 100 milliseconds.) */
 #ifndef Tusage_timeout
-#define Tusage_timeout 95
+#define Tusage_timeout 100
 #endif
 
 /* we need to be able to increment without rolling over */
@@ -589,7 +589,7 @@
     uint8_t next_poll_station = 0;
     uint8_t next_this_station = 0;
     uint8_t next_next_station = 0;
-    uint16_t my_timeout = 10, ns_timeout = 0;
+    uint16_t my_timeout = 10, ns_timeout = 0, mm_timeout = 0;
     /* transition immediately to the next state */
     bool transition_now = false;
     MSTP_MASTER_STATE master_state = mstp_port->master_state;
@@ -616,32 +616,22 @@
             break;
         case MSTP_MASTER_STATE_IDLE:
             /* In the IDLE state, the node waits for a frame. */
-            /* LostToken */
-            if (mstp_port->SilenceTimer((void *) mstp_port) >= Tno_token) {
-                /* assume that the token has been lost */
-                mstp_port->EventCount = 0;      /* Addendum 135-2004d-8 */
-                mstp_port->master_state = MSTP_MASTER_STATE_NO_TOKEN;
-                /* set the receive frame flags to false in case we received
-                   some bytes and had a timeout for some reason */
-                mstp_port->ReceivedInvalidFrame = false;
-                mstp_port->ReceivedValidFrame = false;
-                transition_now = true;
-            } else if (mstp_port->ReceivedInvalidFrame == true) {
+            if (mstp_port->ReceivedInvalidFrame == true) {
                 /* ReceivedInvalidFrame */
                 /* invalid frame was received */
+                /* wait for the next frame - remain in IDLE */
                 mstp_port->ReceivedInvalidFrame = false;
             } else if (mstp_port->ReceivedValidFrame == true) {
-                /* wait for the next frame - remain in IDLE */
                 printf_master("MSTP: ReceivedValidFrame "
                     "Src=%02X Dest=%02X DataLen=%u " "FC=%u ST=%u Type=%s\n",
                     mstp_port->SourceAddress, mstp_port->DestinationAddress,
                     mstp_port->DataLength, mstp_port->FrameCount,
                     mstp_port->SilenceTimer((void *) mstp_port),
                     mstptext_frame_type((unsigned) mstp_port->FrameType));
-                /* destined for me! */
                 if ((mstp_port->DestinationAddress == mstp_port->This_Station)
                     || (mstp_port->DestinationAddress ==
                         MSTP_BROADCAST_ADDRESS)) {
+                    /* destined for me! */
                     switch (mstp_port->FrameType) {
                         case FRAME_TYPE_TOKEN:
                             /* ReceivedToken */
@@ -666,6 +656,7 @@
                                     FRAME_TYPE_REPLY_TO_POLL_FOR_MASTER,
                                     mstp_port->SourceAddress,
                                     mstp_port->This_Station, NULL, 0);
+                                //printf("FRAME_TYPE_REPLY_TO_POLL_FOR_MASTER\n");
                             }
                             break;
                         case FRAME_TYPE_BACNET_DATA_NOT_EXPECTING_REPLY:
@@ -701,6 +692,16 @@
                     MSTP_MASTER_STATE_ANSWER_DATA_REQUEST) {
                     mstp_port->ReceivedValidFrame = false;
                 }
+            } else if (mstp_port->SilenceTimer((void *) mstp_port) >= Tno_token) {
+                /* LostToken */
+                /* assume that the token has been lost */
+                mstp_port->EventCount = 0;      /* Addendum 135-2004d-8 */
+                mstp_port->master_state = MSTP_MASTER_STATE_NO_TOKEN;
+                /* set the receive frame flags to false in case we received
+                   some bytes and had a timeout for some reason */
+                mstp_port->ReceivedInvalidFrame = false;
+                mstp_port->ReceivedValidFrame = false;
+                transition_now = true;
             }
             break;
         case MSTP_MASTER_STATE_USE_TOKEN:
@@ -954,7 +955,11 @@
             } else {
                 ns_timeout =
                     Tno_token + (Tslot * (mstp_port->This_Station + 1));
-                if (mstp_port->SilenceTimer((void *) mstp_port) < ns_timeout) {
+                mm_timeout =
+                    Tno_token + (Tslot * (mstp_port->Nmax_master + 1));
+                if ((mstp_port->SilenceTimer((void *) mstp_port) < ns_timeout)
+                    || (mstp_port->SilenceTimer((void *) mstp_port) >
+                        mm_timeout)) {
                     /* GenerateToken */
                     /* Assume that this node is the lowest numerical address  */
                     /* on the network and is empowered to create a token.  */
@@ -1014,6 +1019,13 @@
                     /* This may indicate the presence of multiple tokens. */
                     /* enter the IDLE state to synchronize with the network.  */
                     /* This action drops the token. */
+                    /*printf("MSTP: ReceivedUnexpectedFrame "
+                        "Src=%02X Dest=%02X DataLen=%u " "FC=%u ST=%u Type=%s\n",
+                        mstp_port->SourceAddress, mstp_port->DestinationAddress,
+                        mstp_port->DataLength, mstp_port->FrameCount,
+                        mstp_port->SilenceTimer((void *) mstp_port),
+                        mstptext_frame_type((unsigned) mstp_port->FrameType));
+                    */
                     mstp_port->master_state = MSTP_MASTER_STATE_IDLE;
                     transition_now = true;
                 }
diff -Naur bacnet-stack-0-8-0/src/npdu.c bacnet-stack-0-8-0-ltrx/src/npdu.c
--- bacnet-stack-0-8-0/src/npdu.c	2019-01-18 14:19:22.133257898 -0800
+++ bacnet-stack-0-8-0-ltrx/src/npdu.c	2019-01-18 14:21:25.935867547 -0800
@@ -316,7 +316,8 @@
     uint8_t i = 0;      /* counter */
     uint16_t src_net = 0;
     uint16_t dest_net = 0;
-    uint8_t address_len = 0;
+    uint8_t slen = 0;
+    uint8_t dlen = 0;
     uint8_t mac_octet = 0;
 
     if (npdu && npdu_data) {
@@ -356,18 +357,18 @@
             len += decode_unsigned16(&npdu[len], &dest_net);
             /* DLEN = 0 denotes broadcast MAC DADR and DADR field is absent */
             /* DLEN > 0 specifies length of DADR field */
-            address_len = npdu[len++];
+            dlen = npdu[len++];
             if (dest) {
                 dest->net = dest_net;
-                dest->len = address_len;
+                dest->len = dlen;
             }
-            if (address_len) {
-                if (address_len > MAX_MAC_LEN) {
+            if (dlen) {
+                if (dlen > MAX_MAC_LEN) {
                     /* address is too large could be a malformed message */
                     return -1;
                 }
 
-                for (i = 0; i < address_len; i++) {
+                for (i = 0; i < dlen; i++) {
                     mac_octet = npdu[len++];
                     if (dest)
                         dest->adr[i] = mac_octet;
@@ -385,32 +386,30 @@
         /* Bit 3: Source specifier where: */
         /* 0 =  SNET, SLEN, and SADR absent */
         /* 1 =  SNET, SLEN, and SADR present */
-        /* SLEN = 0 Invalid */
-        /* SLEN > 0 specifies length of SADR field */
         if (npdu[1] & BIT3) {
             len += decode_unsigned16(&npdu[len], &src_net);
             /* SLEN = 0 denotes broadcast MAC SADR and SADR field is absent */
             /* SLEN > 0 specifies length of SADR field */
-            address_len = npdu[len++];
+            slen = npdu[len++];
             if (src) {
                 src->net = src_net;
-                src->len = address_len;
+                src->len = slen;
             }
-            if (address_len) {
-                if (address_len > MAX_MAC_LEN) {
+            if (slen) {
+                if (slen > MAX_MAC_LEN) {
                     /* address is too large could be a malformed message */
                     return -1;
                 }
 
-                for (i = 0; i < address_len; i++) {
+                for (i = 0; i < slen; i++) {
                     mac_octet = npdu[len++];
                     if (src)
                         src->adr[i] = mac_octet;
                 }
             }
         } else if (src) {
-            /* Clear the net number, with one exception: if the receive() 
-             * function set it to BACNET_BROADCAST_NETWORK, (eg, for 
+            /* Clear the net number, with one exception: if the receive()
+             * function set it to BACNET_BROADCAST_NETWORK, (eg, for
              * BVLC_ORIGINAL_BROADCAST_NPDU) then don't stomp on that.
              */
             if (src->net != BACNET_BROADCAST_NETWORK)
