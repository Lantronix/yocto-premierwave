#!/bin/sh

set +e

compare_macs()
{
    INDEX=1
    while [ $INDEX -le 6 ]; do
        mac1=`echo -n $1 | awk -v i=$INDEX -F':' '{print $i}'`
        mac1="0x"$mac1
        mac1=`printf "%d" $mac1`
        mac2=`echo -n $2 | awk -v i=$INDEX -F':' '{print $i}'`
        mac2="0x"$mac2
        mac2=`printf "%d" $mac2`
        if [ $mac1 != $mac2 ]; then
            return 1
        fi
        INDEX=$((INDEX + 1))
    done
    return 0
}

function uniquestrcat() {
    if [ -z "${1##*$2*}" ] ;then    # $2 is a subsstring of $1
        echo "$1"
    else
        echo "$1 $2"
    fi
}

ltrx_start_network() {

    while true; do
        if mkdir /var/lock/ltrx_start_network; then
            logger -p "user.debug" "ltrx_start_network $$ : started ($1)"
            break
        else
            logger -p "user.debug" "ltrx_start_network $$ : waiting ($1)"
            usleep 500000
        fi
    done

#   trap "logger -p 'user.err' 'ltrx_start_network $$ : terminated ($1)'; rmdir /var/lock/ltrx_start_network" SIGTERM SIGKILL

    current_interface=$1
    SEARCH="search"
    num_dns_svrs=0
    NAMESERVERS=""
    SYSHOSTNAME=""
    ACTIVEGW=""
    ACTIVEGW_FILE=/etc/sysconfig/active_gw

    BRIDGE_CONF=/etc/brmgr-br0
    if [ -f $BRIDGE_CONF ]; then
        . $BRIDGE_CONF
    else
        BRIDGE_ETHDEV="eth0"
        BRIDGE_WLANDEV="wlan0"
    fi

    SORTED_INTERFACE_LIST=`ltrx_getifinfo GETSORTEDLIST`

    for interface in ${SORTED_INTERFACE_LIST} ; do
        if [ -f /etc/sysconfig/network_${interface} ]; then
            IF_GW_FILE=/etc/sysconfig/gw_${interface}
            NETWORKING=""
            . /etc/sysconfig/network_${interface}
            # skip disabled/stopped interfaces
            if [ "$NETWORKING" != "yes" ]; then
                touch ${IF_GW_FILE}
                continue
            fi
            if [ "`ifconfig ${interface} | grep UP | grep RUNNING | wc -l`" == "0" ]; then
                touch ${IF_GW_FILE}
                continue
            fi
            BRIDGE=""
            TYPE=""
            . /etc/sysconfig/network-scripts/ifcfg-${interface}
            # skip bridged ethernet interface hostname when bridged
            if [ "$BRIDGE" == "yes" -a "$TYPE" == "Ethernet" ]; then
                continue
            fi
            metric=`ltrx_getifinfo GETMETRIC ${interface} 1`
            if [ "$IPV4" = "yes" ] ; then
                # DNS and Gateway are not relevant for auto-ip scenario
                if [ ! -f /tmp/autoip.${interface} ]; then
                    ###########################
                    # DNS name resolution
                    ###########################
                    if [ -f /etc/sysconfig/static_domain_${interface} ]; then
                        STATIC_DOMAIN=""
                        . /etc/sysconfig/static_domain_${interface}
                        if [ -n "${STATIC_DOMAIN}" ]; then
                            SEARCH=$( uniquestrcat "${SEARCH}" "${STATIC_DOMAIN}." )
                        fi
                    fi
                    if [ -f /etc/sysconfig/dhcp_domain_${interface} ]; then
                        DHCP_DOMAIN=""
                        . /etc/sysconfig/dhcp_domain_${interface}
                        if [ -n "${DHCP_DOMAIN}" ]; then
                            SEARCH=$( uniquestrcat "${SEARCH}" "${DHCP_DOMAIN}" )
                        fi
                    fi
                    if [ -f /etc/sysconfig/static_dns_${interface} ] ; then
                        dns_svrs=`cat /etc/sysconfig/static_dns_${interface}`
                        for svr in $dns_svrs ; do
                            if [ -n "${svr}" ]; then
                                NAMESERVERS="${NAMESERVERS} ${svr}"
                            fi
                        done
                    fi
                    if [ -f /etc/sysconfig/dhcp_dns_${interface} ] ; then
                        dns_svrs=`cat /etc/sysconfig/dhcp_dns_${interface}`
                        for svr in $dns_svrs ; do
                            if [ -n "${svr}" ]; then
                                NAMESERVERS="${NAMESERVERS} ${svr}"
                            fi
                        done
                    fi
                    if [ "$current_interface" == "$interface" ] || [ "$current_interface" == "" ]; then
                        ###########################
                        # Default gateway.
                        ###########################
                        IF_GW=""
                        DHCP_ROUTER=""
                        GATEWAY=""
                        # Source the dhcp_router file if it exists
                        if [ -f /etc/sysconfig/dhcp_router_${interface} ]; then
                            . /etc/sysconfig/dhcp_router_${interface}
                        fi
                        . /etc/sysconfig/network_${interface}
                        # Set the default gateway
                        if [ -n "${DHCP_ROUTER}" ]; then
                            IF_GW=${DHCP_ROUTER}
                            it="ip route replace default via ${IF_GW} dev ${interface} metric ${metric}"
                        elif [ -n "${GATEWAY}" ]; then
                            IF_GW=${GATEWAY}
                            it="ip route replace default via ${IF_GW} dev ${interface} metric  ${metric}"
                        else
                            IF_GW=""
                            it="ip route add default dev ${interface} metric ${metric}"
                        fi
                        st=0
                        oops="`eval $it 2>&1`"
                        st=$?
                        if [ " $oops" != " " -o " $st" != " 0" ]; then
                           logger -p "user.debug" "ltrx_start_network add route failed: ${interface}"
                           logger -p "user.debug" "ltrx_start_network add route failed: ${it}"
                           logger -p "user.debug" "ltrx_start_network add route failed: ${oops}"
                        fi
                        echo "ACTIVE_GATEWAY=${IF_GW}" > ${IF_GW_FILE}
                        if [ "$ACTIVEGW" == "" ]; then
                            ACTIVEGW=${IF_GW}
                            echo "ACTIVE_GATEWAY=${ACTIVEGW}" > ${ACTIVEGW_FILE}
                        fi
                        if [ -f /tmp/bridging.active -a -f /etc/sysconfig/network_ap0 -a "${current_interface}" == "$BRIDGE_WLANDEV" -a $TRANSPARENT == "disabled" ]; then
                            #re-add the routes if available
                            if [ -e /tmp/bripaddress ] ; then
                                . /tmp/bripaddress
                                ip route add $BRCLIENT_IP dev $BRIDGE_ETHDEV
                            fi
                        fi
                    fi
                fi
            fi
            if [ "$IPV6" = "yes" ] ; then
                #IPv6 has link-local addresses
                if [ -f /etc/sysconfig/static6_domain_${interface} ]; then
                    STATIC_DOMAIN=""
                    . /etc/sysconfig/static6_domain_${interface}
                    if [ -n "${STATIC_DOMAIN}" ]; then
                        SEARCH=$( uniquestrcat "${SEARCH}" "${STATIC_DOMAIN}." )
                    fi
                fi
                if [ -f /etc/sysconfig/dhcp6_domain_${interface} ]; then
                    DHCP_DOMAIN=""
                    . /etc/sysconfig/dhcp6_domain_${interface}
                    if [ -n "${DHCP_DOMAIN}" ]; then
                        SEARCH=$( uniquestrcat "${SEARCH}" "${DHCP_DOMAIN}" )
                    fi
                fi
                if [ -f /etc/sysconfig/static6_dns_${interface} ] ; then
                    dns_svrs=`cat /etc/sysconfig/static6_dns_${interface}`
                    for svr in $dns_svrs ; do
                        if [ -n "${svr}" ]; then
                            NAMESERVERS="${NAMESERVERS} ${svr}"
                        fi
                    done
                fi
                if [ -f /etc/sysconfig/dhcp6_dns_${interface} ] ; then
                    dns_svrs=`cat /etc/sysconfig/dhcp6_dns_${interface}`
                    for svr in $dns_svrs ; do
                        if [ -n "${svr}" ]; then
                            NAMESERVERS="${NAMESERVERS} ${svr}"
                        fi
                    done
                fi
                if [ "$BOOTPROTO6" == "static" ]; then
                    GATEWAY6=""
                    . /etc/sysconfig/network_${interface}
                    if [ -n "${GATEWAY6}" ]; then
                        it="ip -6 route add ${GATEWAY6} dev ${interface}"
                        st=0
                        oops="`eval $it 2>&1`"
                        st=$?
                        if [ " $oops" != " " -o " $st" != " 0" ]; then
                            logger -p "user.debug" "ltrx_start_network add route failed: ${interface}"
                            logger -p "user.debug" "ltrx_start_network add route failed: ${it}"
                            logger -p "user.debug" "ltrx_start_network add route failed: ${oops}"
                        fi
                        it="ip -6 route add default via ${GATEWAY6} dev ${interface}"
                        st=0
                        oops="`eval $it 2>&1`"
                        st=$?
                        if [ " $oops" != " " -o " $st" != " 0" ]; then
                            logger -p "user.debug" "ltrx_start_network add route failed: ${interface}"
                            logger -p "user.debug" "ltrx_start_network add route failed: ${it}"
                            logger -p "user.debug" "ltrx_start_network add route failed: ${oops}"
                        fi
                    fi
                fi
                if [ -f /tmp/bridging.active -a -f /etc/sysconfig/network_ap0 -a "${current_interface}" == "$BRIDGE_WLANDEV" -a $TRANSPARENT == "disabled" ]; then
                    #re-add the routes if available
                    if [ -e /tmp/bripv6address ] ; then
                        . /tmp/bripv6address
                        ip route add $BRCLIENT_IPV6 dev $BRIDGE_ETHDEV
                    fi
                fi
            fi
            ###########################
            # Set the system hostname
            ###########################
            if [ "$SYSHOSTNAME" == "" ]; then
                if [ -f /etc/sysconfig/dhcp_hostname_${interface} ]; then
                    . /etc/sysconfig/dhcp_hostname_${interface}
                fi
                if [ -n "${HOSTNAME}" ]; then
                    SYSHOSTNAME=${HOSTNAME}
                fi
                if [ -n "${DHCP_HOST}" ]; then
                    SYSHOSTNAME=${DHCP_HOST}
                fi
                if [ "$SYSHOSTNAME" != "" ]; then
                    CURRENT_HOSTNAME=`hostname`
                    if [ "$SYSHOSTNAME" != "$CURRENT_HOSTNAME" ]; then
                        logger -p "user.info" "ltrx_start_network $$ : Hostname change from $CURRENT_HOSTNAME to $SYSHOSTNAME"
                        echo ${SYSHOSTNAME} > /etc/hostname
                        hostname ${SYSHOSTNAME}
                    fi
                fi
            fi
        fi
    done
    # Setup DNS configuration
    rm -f /etc/resolv.conf
    echo "; DNS configuration" > /etc/resolv.conf
    if [ "${SEARCH}" != "search" ]; then
        echo "${SEARCH}" >> /etc/resolv.conf
    fi
    for svr in ${NAMESERVERS}
    do
        if [ -n "${svr}" ]; then
            if [ $num_dns_svrs -lt 2 ] ; then
                grep $svr /etc/resolv.conf > /dev/null
                lrc=$?
                if [ "$lrc" -ne 0 ] ; then
                    echo "nameserver $svr" >> /etc/resolv.conf
                    num_dns_svrs=`expr $num_dns_svrs + 1`
                fi
            else
                break;
            fi
        fi
    done
    #ip route flush cache
    ltrx_getifinfo NW_SCRIPT_DONE
    logger -p "user.debug" "ltrx_start_network $$ : completed ($1)"
    rmdir /var/lock/ltrx_start_network
}

