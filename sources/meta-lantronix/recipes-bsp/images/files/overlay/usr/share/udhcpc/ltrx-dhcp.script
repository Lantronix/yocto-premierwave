#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>
# LTRX customizations by Lantronix

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

ETH_IP_FILE="/tmp/ethipaddress"
DNS_CONF="/etc/sysconfig/dhcp_dns_${interface}"
DOMAIN_CONF="/etc/sysconfig/dhcp_domain_${interface}"
HOSTNAME_CONF="/etc/sysconfig/dhcp_hostname_${interface}"
ROUTER_CONF="/etc/sysconfig/dhcp_router_${interface}"
LTRX_NET_COMMON="/etc/sysconfig/network-scripts/ltrx-network-common.script"
[ -n "$broadcast" ] && BROADCAST_ARG="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK_ARG="netmask $subnet"

case "$1" in

    leasefail)
        #nothing to do
        exit 0
        ;;
        
	deconfig)
	if [ -e /tmp/bridging.active -a $interface = "wlan0" ] ; then
        if [ -e $ETH_IP_FILE ] ; then
            . $ETH_IP_FILE
            /sbin/ip addr del $ETH_IP/32 dev eth0
            /bin/rm $ETH_IP_FILE
        fi
        # Enable DHCP interception.
        ebtables -t broute -A BROUTING -p 0x0800 -i wlan0 --ip-protocol udp --ip-source-port 67:68 --ip-destination-port 67:68 -j DROP
	fi
		/sbin/ifconfig $interface 0.0.0.0
		;;

	renew|bound)
        type="${interface:0:3}"
        metric=`ltrx_getifinfo GETMETRIC ${interface} 0`
		/sbin/ifconfig $interface $ip $BROADCAST_ARG $NETMASK_ARG
		#handle newline in routes
        IFS=$'\n'
        routes=`route -n | grep ${interface}`
        for route in ${routes}
        do
			naddress=`echo ${route} | awk -F' ' '{print $1}'`
			nmetric=`echo ${route} | awk -F' ' '{print $5}'`
			#skip the default route and static routes if any
			if [ "$naddress" != "0.0.0.0" -a $nmetric -lt 100 ] ; then
        route del -net ${naddress} netmask ${subnet} dev ${interface}
        route add -net ${naddress} netmask ${subnet} dev ${interface} metric ${metric}

        	fi
        done
        unset IFS
        # Remove the old dhcp files
        rm -f $ROUTER_CONF
        rm -f $DNS_CONF
        rm -f $DOMAIN_CONF
        rm -f $HOSTNAME_CONF

        # Setup the new dhcp files for settings retrieved from server

		if [ -n "$router" ] ; then
			echo "DHCP_ROUTER=$router" > $ROUTER_CONF 		
		fi

		echo -n > $DNS_CONF
        rm -f $DOMAIN_CONF
		[ -n "$domain" ] && echo "DHCP_DOMAIN=\"$domain\"" > $DOMAIN_CONF
        [ -n "$hostname" ] && echo "DHCP_HOST=$hostname" > $HOSTNAME_CONF
        rm -f $DNS_CONF
		for nameserver in $dns ; do
			echo adding dns $nameserver
			echo $nameserver >> $DNS_CONF
		done

	if [ -e /tmp/bridging.active -a $interface = "wlan0" ] ; then
        /bin/rm $ETH_IP_FILE
        echo "ETH_IP=$ip" > $ETH_IP_FILE
        /bin/chmod 777 $ETH_IP_FILE
        /sbin/ip addr add $ip dev eth0
        sleep 1
            if [ -e /tmp/bripaddress ] ; then
                . /tmp/bripaddress
                ip route add $BRCLIENT_IP dev eth0
            fi
        # Disable DHCP interception
        ebtables -t broute -D BROUTING -p 0x0800 -i wlan0 --ip-protocol udp --ip-source-port 67:68 --ip-destination-port 67:68 -j DROP
        while true; do
            nrules=`ebtables -t broute -L | grep  'ip-sport 67:68' | grep 'ip-dport 67:68' | wc -l`
            if [ $nrules -eq 0 ]; then
                break
            fi
            ebtables -t broute -D BROUTING -p 0x0800 -i wlan0 --ip-protocol udp --ip-source-port 67:68 --ip-destination-port 67:68 -j DROP
        done
	fi
		;;
esac

if [ ! -f $LTRX_NET_COMMON ]; then
    echo "Missing ltrx network common script."
    exit 1
fi
. $LTRX_NET_COMMON

ltrx_start_network ${interface}

exit 0
