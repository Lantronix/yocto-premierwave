From 98cdd2a76c2309299a1b39561e30de5a6e198239 Mon Sep 17 00:00:00 2001
From: Scott Ware <scott.r.ware@intel.com>
Date: Wed, 23 Aug 2017 16:14:31 +0100
Subject: [PATCH 2/6] Fix nanomsg library detection

Signed-off-by: Scott Ware <scott.r.ware@intel.com>
---
 dependencies.cmake | 17 -----------------
 1 file changed, 17 deletions(-)

diff --git a/dependencies.cmake b/dependencies.cmake
index 68223b9..acad734 100644
--- a/dependencies.cmake
+++ b/dependencies.cmake
@@ -88,23 +88,6 @@ else()
 
     endif()
 
-    if (NOT NANOMSG_LIBDIR STREQUAL "/usr/lib")
-    # There seems to be a problem in CMake if nanomsg is found in the system 
-    # default location when cross compiling. If it's anywhere 
-    # else, we can create a imported target for it.  (Actually, this might 
-    # fail for any cross compile where nanomsg points to a system directory,
-    # so this might need to be refined as we find edge cases)
-        add_library(nanomsg SHARED IMPORTED)
-
-        set_target_properties(nanomsg PROPERTIES
-            INTERFACE_INCLUDE_DIRECTORIES "${NANOMSG_INCLUDEDIR}"
-            INTERFACE_LINK_LIBRARIES "${NANOMSG_LIBRARIES}"
-            IMPORTED_LOCATION "${NANOMSG_LIB_LOCATION}"
-        )
-        message(STATUS "NANOMSG LIBRARIES: ${NANOMSG_LIBRARIES}")
-        message(STATUS "NANOMSG CFLAGS: ${NANOMSG_CFLAGS}")
-        message(STATUS "NANOMSG LOCATION: ${NANOMSG_LIB_LOCATION}")
-    endif()
     set(NANOMSG_INCLUDES "${NANOMSG_INCLUDEDIR}"  CACHE INTERNAL "")
 
 
-- 
1.9.1

